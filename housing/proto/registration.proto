syntax = "proto3";
package housing;

import "google/api/annotations.proto";

/**
 * Defines the services a client can use to register for housing.
 *
 * RPC Methods:
 *
 *      CreateStudent   -   adds a new student registration
 *
 *      ReadStudent     -   returns a single student from database given an
 *                          id number
 *
 *      UpdateStudent   -   updates either the name or dorm of a student given
 *                          an id number request
 *
 *      DeleteStudent   -   deletes a student given an id number request
 *
 *      ListStudent     -   lists all the students in the database
 *
 *      ClearStudents   -   clears student registrations (not for client use)
 */
service Registration {

    /// Creates a student from a student message. Returns created student with
    // ok response
    rpc CreateStudent(Student) returns (StudentResponse){
        option (google.api.http) = {
            post: "/students/register"
            body: "*"
        };
    };

    /// Reads a student, queried by id number. Returns student with ok response
    rpc ReadStudent(StudentRequest) returns (StudentResponse){
        option (google.api.http) = {
            get: "/students/{id}"
        };
    };

    /// Updates a student's name or dorm. Specified by `changeDorm` boolean.
    // Returns new student.
    rpc UpdateStudent(StudentRequest) returns (StudentResponse){
        option (google.api.http) = {
            put: "/students/update/{id}"
            body: "*"
        };
    };

    /// Deletes a registration queried by id and returns the deleted student
    rpc DeleteStudent(StudentRequest) returns (StudentResponse){
        option (google.api.http) = {
            delete: "/students/delete/{id}"
        };
    };

    /// Lists all the registered students. Returns a stream of students
    rpc ListStudents(Void) returns (stream StudentResponse){
        option (google.api.http) = {
            get: "/students"
        };
    };

    /// Removes all registered students
    rpc ClearStudents(Void) returns (Void){
        option (google.api.http) = {
            delete: "/students/clear"
        };
    };
}

/**
 * Empty message for rpc's that require no request (clear and list)
 */
message Void {}

/**
 * Represents a student with a unique id, a name, and a dorm
 */
message Student {
    
    /** unique id for each student */
    int32 id = 1;

    /** first and last name of a student */
    string name = 2;

    /** dorm choice */
    string dorm = 3;
}

/**
 * A request made by a client, specifiying id of a student. `changeDorm` and 
 * `new` are set when updating a student.
 */
message StudentRequest {

    /** Unique id student query */
    int32 id = 1;

    /** True if the client requests to change the dorm, false to change name */
    bool changeDorm = 2;

    /** The updated value */
    string new = 3;
}

/**
 * A response sent by a server, returning a student message and a boolean field
 * indicating a successful transaction
 */
message StudentResponse{

    /**
     * The deleted, created, or retrieved student. If response is not `ok`,
     * id = 0, name = dorm = "ERROR"
     */
    Student student = 1;

    /** True if transaction is successful, false otherwise */
    bool ok = 2;
}
