// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/registration.proto

package housing

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_70818ed37065cccf, []int{0}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

type Student struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Dorm                 string   `protobuf:"bytes,3,opt,name=dorm,proto3" json:"dorm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Student) Reset()         { *m = Student{} }
func (m *Student) String() string { return proto.CompactTextString(m) }
func (*Student) ProtoMessage()    {}
func (*Student) Descriptor() ([]byte, []int) {
	return fileDescriptor_70818ed37065cccf, []int{1}
}

func (m *Student) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Student.Unmarshal(m, b)
}
func (m *Student) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Student.Marshal(b, m, deterministic)
}
func (m *Student) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Student.Merge(m, src)
}
func (m *Student) XXX_Size() int {
	return xxx_messageInfo_Student.Size(m)
}
func (m *Student) XXX_DiscardUnknown() {
	xxx_messageInfo_Student.DiscardUnknown(m)
}

var xxx_messageInfo_Student proto.InternalMessageInfo

func (m *Student) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Student) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Student) GetDorm() string {
	if m != nil {
		return m.Dorm
	}
	return ""
}

type StudentRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChangeDorm           bool     `protobuf:"varint,2,opt,name=changeDorm,proto3" json:"changeDorm,omitempty"`
	New                  string   `protobuf:"bytes,3,opt,name=new,proto3" json:"new,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StudentRequest) Reset()         { *m = StudentRequest{} }
func (m *StudentRequest) String() string { return proto.CompactTextString(m) }
func (*StudentRequest) ProtoMessage()    {}
func (*StudentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_70818ed37065cccf, []int{2}
}

func (m *StudentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StudentRequest.Unmarshal(m, b)
}
func (m *StudentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StudentRequest.Marshal(b, m, deterministic)
}
func (m *StudentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StudentRequest.Merge(m, src)
}
func (m *StudentRequest) XXX_Size() int {
	return xxx_messageInfo_StudentRequest.Size(m)
}
func (m *StudentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StudentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StudentRequest proto.InternalMessageInfo

func (m *StudentRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *StudentRequest) GetChangeDorm() bool {
	if m != nil {
		return m.ChangeDorm
	}
	return false
}

func (m *StudentRequest) GetNew() string {
	if m != nil {
		return m.New
	}
	return ""
}

type StudentResponse struct {
	Student              *Student `protobuf:"bytes,1,opt,name=student,proto3" json:"student,omitempty"`
	Ok                   bool     `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StudentResponse) Reset()         { *m = StudentResponse{} }
func (m *StudentResponse) String() string { return proto.CompactTextString(m) }
func (*StudentResponse) ProtoMessage()    {}
func (*StudentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_70818ed37065cccf, []int{3}
}

func (m *StudentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StudentResponse.Unmarshal(m, b)
}
func (m *StudentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StudentResponse.Marshal(b, m, deterministic)
}
func (m *StudentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StudentResponse.Merge(m, src)
}
func (m *StudentResponse) XXX_Size() int {
	return xxx_messageInfo_StudentResponse.Size(m)
}
func (m *StudentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StudentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StudentResponse proto.InternalMessageInfo

func (m *StudentResponse) GetStudent() *Student {
	if m != nil {
		return m.Student
	}
	return nil
}

func (m *StudentResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*Void)(nil), "housing.Void")
	proto.RegisterType((*Student)(nil), "housing.Student")
	proto.RegisterType((*StudentRequest)(nil), "housing.StudentRequest")
	proto.RegisterType((*StudentResponse)(nil), "housing.StudentResponse")
}

func init() { proto.RegisterFile("proto/registration.proto", fileDescriptor_70818ed37065cccf) }

var fileDescriptor_70818ed37065cccf = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xb1, 0x4e, 0xeb, 0x30,
	0x14, 0x86, 0x95, 0xb4, 0xb7, 0xbd, 0x3d, 0x6d, 0x7a, 0x7b, 0x2d, 0x41, 0xa3, 0x08, 0x50, 0x95,
	0xa9, 0xea, 0xd0, 0xa0, 0xb2, 0xb1, 0x21, 0x3a, 0x96, 0x25, 0x08, 0x84, 0xd8, 0x0c, 0xb6, 0x52,
	0xab, 0xad, 0x1d, 0x62, 0x47, 0x0c, 0x88, 0x85, 0x57, 0xe0, 0xd1, 0x18, 0x59, 0x79, 0x10, 0x64,
	0xc7, 0x69, 0x23, 0x45, 0xea, 0x00, 0xdb, 0xd1, 0xaf, 0xe3, 0xef, 0xff, 0xcf, 0xf1, 0x01, 0x3f,
	0xcd, 0x84, 0x12, 0x51, 0x46, 0x13, 0x26, 0x55, 0x86, 0x15, 0x13, 0x7c, 0x6a, 0x24, 0xd4, 0x5e,
	0x8a, 0x5c, 0x32, 0x9e, 0x04, 0x47, 0x89, 0x10, 0xc9, 0x9a, 0x46, 0x38, 0x65, 0x11, 0xe6, 0x5c,
	0x28, 0xd3, 0x25, 0x8b, 0xb6, 0xb0, 0x05, 0xcd, 0x5b, 0xc1, 0x48, 0x78, 0x01, 0xed, 0x6b, 0x95,
	0x13, 0xca, 0x15, 0xea, 0x83, 0xcb, 0x88, 0xef, 0x8c, 0x9c, 0xf1, 0x9f, 0xd8, 0x65, 0x04, 0x21,
	0x68, 0x72, 0xbc, 0xa1, 0xbe, 0x3b, 0x72, 0xc6, 0x9d, 0xd8, 0xd4, 0x5a, 0x23, 0x22, 0xdb, 0xf8,
	0x8d, 0x42, 0xd3, 0x75, 0x18, 0x43, 0xdf, 0x22, 0x62, 0xfa, 0x94, 0x53, 0x59, 0x27, 0x9d, 0x00,
	0x3c, 0x2e, 0x31, 0x4f, 0xe8, 0x5c, 0xbf, 0xd5, 0xbc, 0xbf, 0x71, 0x45, 0x41, 0x03, 0x68, 0x70,
	0xfa, 0x6c, 0xa1, 0xba, 0x0c, 0xaf, 0xe0, 0xdf, 0x96, 0x29, 0x53, 0xc1, 0x25, 0x45, 0x13, 0x68,
	0xcb, 0x42, 0x32, 0xe4, 0xee, 0x6c, 0x30, 0xb5, 0xa3, 0x4e, 0xcb, 0xd6, 0xb2, 0x41, 0x07, 0x10,
	0x2b, 0x6b, 0xe4, 0x8a, 0xd5, 0xec, 0xb3, 0x01, 0xbd, 0xb8, 0xb2, 0x2b, 0x74, 0x0f, 0xde, 0x65,
	0x46, 0xb1, 0xa2, 0xe5, 0xf0, 0x35, 0x58, 0xe0, 0xd7, 0xf0, 0x36, 0x49, 0x78, 0xfc, 0xf6, 0xf1,
	0xf5, 0xee, 0x0e, 0x43, 0x14, 0x59, 0x3f, 0x69, 0x3f, 0x82, 0x66, 0xe7, 0xce, 0x04, 0xdd, 0x41,
	0x37, 0xa6, 0x98, 0x94, 0xe4, 0x61, 0x9d, 0x63, 0xb6, 0xb4, 0xc7, 0xe0, 0xd0, 0x18, 0x0c, 0x50,
	0x7f, 0x67, 0xf0, 0xc2, 0xc8, 0x2b, 0x22, 0xe0, 0xdd, 0xa4, 0xa4, 0x92, 0xfa, 0x07, 0xec, 0x91,
	0x61, 0x07, 0xc1, 0xc1, 0x8e, 0x9d, 0x1b, 0xa6, 0xb1, 0xd0, 0xf9, 0x31, 0x78, 0x73, 0xba, 0xa6,
	0xbf, 0x72, 0xb1, 0x2b, 0x9a, 0x54, 0x5c, 0x88, 0x61, 0x16, 0x83, 0x2c, 0xa0, 0xb7, 0x60, 0x52,
	0xd9, 0x57, 0x12, 0x79, 0x5b, 0x90, 0x3e, 0xca, 0x3d, 0xdc, 0xff, 0x86, 0xdb, 0x45, 0x9d, 0x2d,
	0xf7, 0xd4, 0x79, 0x68, 0x99, 0x93, 0x3e, 0xfb, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xd2, 0xb7, 0xaf,
	0xe5, 0x15, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RegistrationClient is the client API for Registration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistrationClient interface {
	CreateStudent(ctx context.Context, in *Student, opts ...grpc.CallOption) (*StudentResponse, error)
	ReadStudent(ctx context.Context, in *StudentRequest, opts ...grpc.CallOption) (*StudentResponse, error)
	UpdateStudent(ctx context.Context, in *StudentRequest, opts ...grpc.CallOption) (*StudentResponse, error)
	DeleteStudent(ctx context.Context, in *StudentRequest, opts ...grpc.CallOption) (*StudentResponse, error)
	ListStudents(ctx context.Context, in *Void, opts ...grpc.CallOption) (Registration_ListStudentsClient, error)
}

type registrationClient struct {
	cc *grpc.ClientConn
}

func NewRegistrationClient(cc *grpc.ClientConn) RegistrationClient {
	return &registrationClient{cc}
}

func (c *registrationClient) CreateStudent(ctx context.Context, in *Student, opts ...grpc.CallOption) (*StudentResponse, error) {
	out := new(StudentResponse)
	err := c.cc.Invoke(ctx, "/housing.Registration/CreateStudent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registrationClient) ReadStudent(ctx context.Context, in *StudentRequest, opts ...grpc.CallOption) (*StudentResponse, error) {
	out := new(StudentResponse)
	err := c.cc.Invoke(ctx, "/housing.Registration/ReadStudent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registrationClient) UpdateStudent(ctx context.Context, in *StudentRequest, opts ...grpc.CallOption) (*StudentResponse, error) {
	out := new(StudentResponse)
	err := c.cc.Invoke(ctx, "/housing.Registration/UpdateStudent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registrationClient) DeleteStudent(ctx context.Context, in *StudentRequest, opts ...grpc.CallOption) (*StudentResponse, error) {
	out := new(StudentResponse)
	err := c.cc.Invoke(ctx, "/housing.Registration/DeleteStudent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registrationClient) ListStudents(ctx context.Context, in *Void, opts ...grpc.CallOption) (Registration_ListStudentsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Registration_serviceDesc.Streams[0], "/housing.Registration/ListStudents", opts...)
	if err != nil {
		return nil, err
	}
	x := &registrationListStudentsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Registration_ListStudentsClient interface {
	Recv() (*StudentResponse, error)
	grpc.ClientStream
}

type registrationListStudentsClient struct {
	grpc.ClientStream
}

func (x *registrationListStudentsClient) Recv() (*StudentResponse, error) {
	m := new(StudentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RegistrationServer is the server API for Registration service.
type RegistrationServer interface {
	CreateStudent(context.Context, *Student) (*StudentResponse, error)
	ReadStudent(context.Context, *StudentRequest) (*StudentResponse, error)
	UpdateStudent(context.Context, *StudentRequest) (*StudentResponse, error)
	DeleteStudent(context.Context, *StudentRequest) (*StudentResponse, error)
	ListStudents(*Void, Registration_ListStudentsServer) error
}

// UnimplementedRegistrationServer can be embedded to have forward compatible implementations.
type UnimplementedRegistrationServer struct {
}

func (*UnimplementedRegistrationServer) CreateStudent(ctx context.Context, req *Student) (*StudentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStudent not implemented")
}
func (*UnimplementedRegistrationServer) ReadStudent(ctx context.Context, req *StudentRequest) (*StudentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadStudent not implemented")
}
func (*UnimplementedRegistrationServer) UpdateStudent(ctx context.Context, req *StudentRequest) (*StudentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStudent not implemented")
}
func (*UnimplementedRegistrationServer) DeleteStudent(ctx context.Context, req *StudentRequest) (*StudentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStudent not implemented")
}
func (*UnimplementedRegistrationServer) ListStudents(req *Void, srv Registration_ListStudentsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListStudents not implemented")
}

func RegisterRegistrationServer(s *grpc.Server, srv RegistrationServer) {
	s.RegisterService(&_Registration_serviceDesc, srv)
}

func _Registration_CreateStudent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Student)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServer).CreateStudent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/housing.Registration/CreateStudent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServer).CreateStudent(ctx, req.(*Student))
	}
	return interceptor(ctx, in, info, handler)
}

func _Registration_ReadStudent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServer).ReadStudent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/housing.Registration/ReadStudent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServer).ReadStudent(ctx, req.(*StudentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Registration_UpdateStudent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServer).UpdateStudent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/housing.Registration/UpdateStudent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServer).UpdateStudent(ctx, req.(*StudentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Registration_DeleteStudent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServer).DeleteStudent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/housing.Registration/DeleteStudent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServer).DeleteStudent(ctx, req.(*StudentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Registration_ListStudents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Void)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RegistrationServer).ListStudents(m, &registrationListStudentsServer{stream})
}

type Registration_ListStudentsServer interface {
	Send(*StudentResponse) error
	grpc.ServerStream
}

type registrationListStudentsServer struct {
	grpc.ServerStream
}

func (x *registrationListStudentsServer) Send(m *StudentResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Registration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "housing.Registration",
	HandlerType: (*RegistrationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateStudent",
			Handler:    _Registration_CreateStudent_Handler,
		},
		{
			MethodName: "ReadStudent",
			Handler:    _Registration_ReadStudent_Handler,
		},
		{
			MethodName: "UpdateStudent",
			Handler:    _Registration_UpdateStudent_Handler,
		},
		{
			MethodName: "DeleteStudent",
			Handler:    _Registration_DeleteStudent_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListStudents",
			Handler:       _Registration_ListStudents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/registration.proto",
}
