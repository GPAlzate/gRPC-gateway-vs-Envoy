{
  "swagger": "2.0",
  "info": {
    "title": "proto/registration.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/students": {
      "get": {
        "summary": "/ Lists all the registered students. Returns a stream of students",
        "operationId": "ListStudents",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/housingStudentResponse"
            }
          }
        },
        "tags": [
          "Registration"
        ]
      }
    },
    "/students/clear": {
      "delete": {
        "summary": "/ Removes all registered students",
        "operationId": "ClearStudents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/housingVoid"
            }
          }
        },
        "tags": [
          "Registration"
        ]
      }
    },
    "/students/delete/{id}": {
      "delete": {
        "summary": "/ Deletes a registration queried by id and returns the deleted student",
        "operationId": "DeleteStudent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/housingStudentResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "* Unique id student query",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "changeDorm",
            "description": "* True if the client requests to change the dorm, false to change name.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "new",
            "description": "* The updated value.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Registration"
        ]
      }
    },
    "/students/register": {
      "post": {
        "summary": "/ Creates a student from a student message. Returns created student with\nok response",
        "operationId": "CreateStudent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/housingStudentResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/housingStudent"
            }
          }
        ],
        "tags": [
          "Registration"
        ]
      }
    },
    "/students/update/{id}": {
      "put": {
        "summary": "/ Updates a student's name or dorm. Specified by `changeDorm` boolean.\nReturns new student.",
        "operationId": "UpdateStudent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/housingStudentResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "* Unique id student query",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/housingStudentRequest"
            }
          }
        ],
        "tags": [
          "Registration"
        ]
      }
    },
    "/students/{id}": {
      "get": {
        "summary": "/ Reads a student, queried by id number. Returns student with ok response",
        "operationId": "ReadStudent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/housingStudentResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "* Unique id student query",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "changeDorm",
            "description": "* True if the client requests to change the dorm, false to change name.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "new",
            "description": "* The updated value.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Registration"
        ]
      }
    }
  },
  "definitions": {
    "housingStudent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "* unique id for each student"
        },
        "name": {
          "type": "string",
          "title": "* first and last name of a student"
        },
        "dorm": {
          "type": "string",
          "title": "* dorm choice"
        }
      },
      "title": "*\nRepresents a student with a unique id, a name, and a dorm"
    },
    "housingStudentRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "* Unique id student query"
        },
        "changeDorm": {
          "type": "boolean",
          "format": "boolean",
          "title": "* True if the client requests to change the dorm, false to change name"
        },
        "new": {
          "type": "string",
          "title": "* The updated value"
        }
      },
      "description": "*\nA request made by a client, specifiying id of a student. `changeDorm` and \n`new` are set when updating a student."
    },
    "housingStudentResponse": {
      "type": "object",
      "properties": {
        "student": {
          "$ref": "#/definitions/housingStudent",
          "title": "*\nThe deleted, created, or retrieved student. If response is not `ok`,\nid = 0, name = dorm = \"ERROR\""
        },
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "* True if transaction is successful, false otherwise"
        }
      },
      "title": "*\nA response sent by a server, returning a student message and a boolean field\nindicating a successful transaction"
    },
    "housingVoid": {
      "type": "object",
      "title": "*\nEmpty message for rpc's that require no request (clear and list)"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "x-stream-definitions": {
    "housingStudentResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/housingStudentResponse"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of housingStudentResponse"
    }
  }
}
