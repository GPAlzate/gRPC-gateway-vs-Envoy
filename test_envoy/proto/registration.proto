syntax = "proto3";
package housing;

import "google/api/annotations.proto";

/**
 * Defines the services a client can use to register for housing.
 *
 * RPCs:
 *      CreateStudent   -   adds a new student registration
 *
 *      ReadStudent     -   returns a single student from database given an
 *                          id number
 *
 *      UpdateStudent   -   updates either the name or dorm of a student given
 *                          an id number request
 *
 *      DeleteStudent   -   deletes a student given an id number request
 *
 *      ListStudent     -   lists all the students in the database
 *
 *      ClearStudents   -   clears student registrations (not for client use)
 */
service Registration {

    /// Creates a student from a student object. Returns created student with
    /// an ok response
    rpc CreateStudent(Student) returns (StudentResponse){
        option (google.api.http) = {
            post: "/students/register"
            body: "*"
        };
    };
    rpc ReadStudent(StudentRequest) returns (StudentResponse){
        option (google.api.http) = {
            get: "/students/{id}"
        };
    };
    rpc UpdateStudent(StudentRequest) returns (StudentResponse){
        option (google.api.http) = {
            put: "/students/update/{id}"
            body: "*"
        };
    };
    rpc DeleteStudent(StudentRequest) returns (StudentResponse){
        option (google.api.http) = {
            delete: "/students/delete/{id}"
        };
    };
    rpc ListStudents(Void) returns (stream StudentResponse){
        option (google.api.http) = {
            get: "/students"
        };
    };
    rpc ClearStudents(Void) returns (Void){
        option (google.api.http) = {
            delete: "/students/clear"
        };
    };
}
message Void {}

message Student {
    int32 id = 1;
    string name = 2;
    string dorm = 3;
}

message StudentRequest {
    int32 id = 1;
    bool changeDorm = 2;
    string new = 3;
}

message StudentResponse{
    Student student = 1;
    bool ok = 2;
}
